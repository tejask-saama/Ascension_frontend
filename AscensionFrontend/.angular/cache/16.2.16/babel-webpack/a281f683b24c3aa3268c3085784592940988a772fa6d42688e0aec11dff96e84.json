{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet SmartAssistantService = /*#__PURE__*/(() => {\n  class SmartAssistantService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = environment.apiUrl;\n      this.chatHistory = new Map();\n    }\n    askQuestion(question, patientId) {\n      // Call the API and pass the clinical question and patient ID as per requirements\n      const payload = {\n        question,\n        patientId\n      };\n      return this.http.post(`${this.apiUrl}/assistant`, payload);\n    }\n    addUserMessage(patientId, content) {\n      this.addMessage(patientId, 'user', content);\n    }\n    addAssistantMessage(patientId, content) {\n      this.addMessage(patientId, 'assistant', content);\n    }\n    addMessage(patientId, type, content) {\n      if (!this.chatHistory.has(patientId)) {\n        this.chatHistory.set(patientId, []);\n      }\n      const message = {\n        type,\n        content,\n        timestamp: new Date()\n      };\n      this.chatHistory.get(patientId)?.push(message);\n    }\n    getChatHistory(patientId) {\n      return this.chatHistory.get(patientId) || [];\n    }\n    clearChatHistory(patientId) {\n      this.chatHistory.set(patientId, []);\n    }\n    static {\n      this.ɵfac = function SmartAssistantService_Factory(t) {\n        return new (t || SmartAssistantService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: SmartAssistantService,\n        factory: SmartAssistantService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return SmartAssistantService;\n})();\nexport { SmartAssistantService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}