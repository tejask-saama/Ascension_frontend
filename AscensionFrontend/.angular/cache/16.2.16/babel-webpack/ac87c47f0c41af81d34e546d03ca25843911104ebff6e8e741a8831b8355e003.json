{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/smart-assistant.service\";\nlet SmartAssistantComponent = /*#__PURE__*/(() => {\n  class SmartAssistantComponent {\n    constructor(route, router, smartAssistantService) {\n      this.route = route;\n      this.router = router;\n      this.smartAssistantService = smartAssistantService;\n      this.isExpanded = true;\n      this.currentPatientId = null;\n      this.question = '';\n      this.chatMessages = [];\n      this.loading = false;\n    }\n    ngOnInit() {\n      // Listen for route changes to update current patient ID\n      this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n        this.updateCurrentPatientId();\n      });\n      // Initial check for patient ID\n      this.updateCurrentPatientId();\n    }\n    updateCurrentPatientId() {\n      const urlSegments = this.router.url.split('/');\n      if (urlSegments.length > 2 && urlSegments[1] === 'patients') {\n        const patientId = parseInt(urlSegments[2], 10);\n        if (!isNaN(patientId)) {\n          this.currentPatientId = patientId;\n          this.chatMessages = this.smartAssistantService.getChatHistory(patientId);\n        }\n      } else {\n        this.currentPatientId = null;\n      }\n    }\n    toggleExpand() {\n      this.isExpanded = !this.isExpanded;\n    }\n    clearChat() {\n      if (this.currentPatientId) {\n        this.smartAssistantService.clearChatHistory(this.currentPatientId);\n        this.chatMessages = [];\n      }\n    }\n    closeAssistant() {\n      // This method is kept for compatibility but doesn't do anything now\n      // since the assistant is always visible\n    }\n    sendQuestion() {\n      if (!this.question.trim() || !this.currentPatientId) {\n        return;\n      }\n      const questionText = this.question.trim();\n      this.loading = true;\n      // Add user message to chat\n      this.smartAssistantService.addUserMessage(this.currentPatientId, questionText);\n      this.chatMessages = this.smartAssistantService.getChatHistory(this.currentPatientId);\n      // Clear input\n      this.question = '';\n      // Get response from API\n      this.smartAssistantService.askQuestion(questionText, this.currentPatientId).subscribe({\n        next: response => {\n          // Add assistant message to chat\n          this.smartAssistantService.addAssistantMessage(this.currentPatientId, response.answer);\n          this.chatMessages = this.smartAssistantService.getChatHistory(this.currentPatientId);\n          this.loading = false;\n          // Scroll to bottom of chat\n          setTimeout(() => {\n            this.scrollToBottom();\n          }, 100);\n        },\n        error: error => {\n          console.error('Error getting assistant response:', error);\n          this.smartAssistantService.addAssistantMessage(this.currentPatientId, 'Sorry, I encountered an error. Please try again.');\n          this.chatMessages = this.smartAssistantService.getChatHistory(this.currentPatientId);\n          this.loading = false;\n        }\n      });\n    }\n    selectSuggestion(suggestion) {\n      this.question = suggestion;\n      this.sendQuestion();\n    }\n    scrollToBottom() {\n      const chatContainer = document.querySelector('.chat-messages');\n      if (chatContainer) {\n        chatContainer.scrollTop = chatContainer.scrollHeight;\n      }\n    }\n    formatTime(date) {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      }) + ' CST';\n    }\n    static {\n      this.ɵfac = function SmartAssistantComponent_Factory(t) {\n        return new (t || SmartAssistantComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.SmartAssistantService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: SmartAssistantComponent,\n        selectors: [[\"app-smart-assistant\"]],\n        decls: 30,\n        vars: 0,\n        consts: [[1, \"smart-assistant-container\"], [1, \"smart-assistant-panel\"], [1, \"assistant-button\"], [1, \"fas\", \"fa-info-circle\"], [1, \"assistant-body\"], [1, \"assistant-info\"], [1, \"info-icon\"], [1, \"info-text\"], [1, \"assistant-jump\"], [\"href\", \"#\"]],\n        template: function SmartAssistantComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n            i0.ɵɵelement(3, \"i\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n            i0.ɵɵelement(7, \"i\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"div\", 7)(9, \"p\");\n            i0.ɵɵtext(10, \"Chat with the AI assistant to quickly find or summarize information about your patient.\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(11, \"div\", 8)(12, \"p\");\n            i0.ɵɵtext(13, \"Jump to:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"ul\")(15, \"li\")(16, \"a\", 9);\n            i0.ɵɵtext(17, \"1) Patient Information\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"li\")(19, \"a\", 9);\n            i0.ɵɵtext(20, \"2) Background\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(21, \"li\")(22, \"a\", 9);\n            i0.ɵɵtext(23, \"3) Assessment\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(24, \"li\")(25, \"a\", 9);\n            i0.ɵɵtext(26, \"4) Recommendations\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(27, \"li\")(28, \"a\", 9);\n            i0.ɵɵtext(29, \"5) Notes\");\n            i0.ɵɵelementEnd()()()()()()();\n          }\n        },\n        styles: [\".smart-assistant-container[_ngcontent-%COMP%]{position:absolute;top:70px;right:20px;z-index:1000}.smart-assistant-bubble[_ngcontent-%COMP%]{background-color:#0070cd;color:#fff;padding:10px 20px;border-radius:20px;cursor:pointer;box-shadow:0 2px 10px #0003;display:flex;align-items:center;justify-content:center;transition:all .3s ease}.smart-assistant-bubble[_ngcontent-%COMP%]:hover{background-color:#005ba4}.smart-assistant-bubble[_ngcontent-%COMP%]   .bubble-text[_ngcontent-%COMP%]{font-weight:500;font-size:.9rem}.smart-assistant-panel[_ngcontent-%COMP%]{width:280px;background-color:#fff;border-radius:8px;box-shadow:0 2px 15px #0003;display:flex;flex-direction:column;overflow:hidden;max-height:300px;position:relative}.assistant-button[_ngcontent-%COMP%]{position:absolute;top:10px;right:10px;background-color:#0070cd;color:#fff;border:none;border-radius:50%;width:32px;height:32px;display:flex;align-items:center;justify-content:center;cursor:pointer;z-index:10}.assistant-button[_ngcontent-%COMP%]:hover{background-color:#005ba4}.assistant-button[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:1rem}.assistant-header[_ngcontent-%COMP%]{background-color:#0070cd;color:#fff;padding:10px 15px;display:flex;justify-content:space-between;align-items:center}.assistant-header[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{font-size:.9rem;font-weight:500;margin:0}.assistant-header[_ngcontent-%COMP%]   .assistant-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:none;border:none;color:#fff;cursor:pointer;font-size:.8rem;padding:0}.assistant-body[_ngcontent-%COMP%]{padding:40px 15px 15px;display:flex;flex-direction:column;gap:15px;overflow-y:auto;background-color:#fff}.assistant-info[_ngcontent-%COMP%]{display:flex;align-items:flex-start;gap:10px}.assistant-info[_ngcontent-%COMP%]   .info-icon[_ngcontent-%COMP%]{color:#0070cd;font-size:1rem;margin-top:2px}.assistant-info[_ngcontent-%COMP%]   .info-text[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:.8rem;line-height:1.4;color:#333;margin:0}.assistant-intro[_ngcontent-%COMP%]{padding:15px;text-align:center}.assistant-jump[_ngcontent-%COMP%]{margin-top:10px}.assistant-jump[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:.8rem;font-weight:500;margin:0 0 5px;color:#333}.assistant-jump[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{list-style:none;padding:0;margin:0}.assistant-jump[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin-bottom:3px}.assistant-jump[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#0070cd;text-decoration:none;font-size:.8rem}.assistant-jump[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{text-decoration:underline}.assistant-hint[_ngcontent-%COMP%]{font-size:.9rem;color:var(--dark-gray);margin-top:5px}.assistant-suggestions[_ngcontent-%COMP%]{padding:0 15px 15px;display:flex;flex-direction:column;gap:10px;margin-top:20px}.suggestion-category[_ngcontent-%COMP%]{display:flex;align-items:center;gap:10px;padding:10px;border-radius:6px;background-color:var(--light-gray);cursor:pointer;transition:background-color .2s}.suggestion-category[_ngcontent-%COMP%]:hover{background-color:var(--medium-gray)}.category-icon[_ngcontent-%COMP%]{width:40px;height:40px;background-color:var(--primary-color);color:var(--white);border-radius:50%;display:flex;justify-content:center;align-items:center;font-size:1.2rem}.category-info[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{font-size:1rem;margin-bottom:2px}.category-info[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:.8rem;color:var(--dark-gray)}.assistant-chat[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column;padding:15px;overflow:hidden}.chat-messages[_ngcontent-%COMP%]{flex:1;overflow-y:auto;display:flex;flex-direction:column;gap:15px;margin-bottom:15px}.message[_ngcontent-%COMP%]{max-width:80%;padding:10px 15px;border-radius:18px;line-height:1.4}.message.user[_ngcontent-%COMP%]{background-color:var(--light-gray);align-self:flex-end;border-bottom-right-radius:4px}.message.assistant[_ngcontent-%COMP%]{background-color:var(--primary-color);color:var(--white);align-self:flex-start;border-bottom-left-radius:4px}.message-time[_ngcontent-%COMP%]{font-size:.7rem;color:var(--dark-gray);margin-top:5px;text-align:right}.message.assistant[_ngcontent-%COMP%]   .message-time[_ngcontent-%COMP%]{color:#ffffffb3}.chat-input-container[_ngcontent-%COMP%]{margin-top:auto;padding-top:15px;border-top:1px solid #e0e0e0}.chat-input[_ngcontent-%COMP%]{display:flex;gap:10px}.chat-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{flex:1;padding:10px 15px;border:1px solid #d0d0d0;border-radius:20px;font-size:.9rem}.chat-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none;border-color:#0070cd;box-shadow:0 0 0 2px #0070cd1a}.chat-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:disabled{background-color:#f5f5f5;cursor:not-allowed}.chat-input[_ngcontent-%COMP%]   .send-button[_ngcontent-%COMP%]{background-color:#0070cd;color:#fff;border:none;border-radius:50%;width:40px;height:40px;display:flex;align-items:center;justify-content:center;cursor:pointer;transition:background-color .2s}.chat-input[_ngcontent-%COMP%]   .send-button[_ngcontent-%COMP%]:hover{background-color:#005ba4}.chat-input[_ngcontent-%COMP%]   .send-button[_ngcontent-%COMP%]:disabled{opacity:.6;cursor:not-allowed}@media (max-width: 768px){.smart-assistant-panel[_ngcontent-%COMP%]{width:90%;right:5%;top:120px}.smart-assistant-panel.expanded[_ngcontent-%COMP%]{width:95%;height:80vh}}\"]\n      });\n    }\n  }\n  return SmartAssistantComponent;\n})();\nexport { SmartAssistantComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}